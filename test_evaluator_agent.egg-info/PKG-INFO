Metadata-Version: 2.4
Name: test-evaluator-agent
Version: 0.1.0
Summary: AI-powered data extraction evaluator agent using LangGraph
Author-email: Agentic Data Mining <noreply@example.com>
Project-URL: Homepage, https://github.com/StaircaseAPI/agentic-data-mining
Project-URL: Repository, https://github.com/StaircaseAPI/agentic-data-mining
Project-URL: Issues, https://github.com/StaircaseAPI/agentic-data-mining/issues
Keywords: ai,langgraph,data-extraction,evaluator,agent
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: pandas>=2.0.0
Requires-Dist: requests>=2.28.0
Requires-Dist: langgraph>=0.4.0
Requires-Dist: langchain>=0.3.0
Requires-Dist: langchain-mcp-adapters>=0.1.0
Requires-Dist: langchain-core>=0.3.0
Requires-Dist: langchain-openai>=0.3.0
Requires-Dist: langgraph-checkpoint>=2.0.0
Requires-Dist: langgraph-prebuilt>=0.2.0
Requires-Dist: jsonschema>=4.0.0
Requires-Dist: anthropic>=0.50.0
Requires-Dist: openai>=1.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: typing-extensions>=4.0.0

# Test Evaluator Agent

An AI-powered data extraction evaluator agent using LangGraph for property data processing.

## Features

- Multi-agent conversation system for data extraction validation
- Schema validation using JSON Schema
- CLI validation integration
- Address matching with fuzzy logic
- Retry mechanism with configurable limits
- IPFS schema fetching and caching

## Installation

You can run this tool directly using `uvx`:

```bash
uvx --from git+https://github.com/StaircaseAPI/agentic-data-mining test-evaluator-agent
```

## Usage

The agent requires specific directory structure and environment variables:

### Directory Structure
```
./input/          # Input files to process
./schemas/        # JSON schemas for validation
./data/          # Intermediate extracted data
./processed/     # Final processed data
./possible_addresses/  # Address candidates
./submit/        # Final submission format
```

### Environment Variables
- `MODEL_NAME`: AI model to use (default: gpt-4.1)
- `TEMPERATURE`: Model temperature (default: 0)

### Running the Agent

```bash
# Set environment variables
export MODEL_NAME=gpt-4.1
export TEMPERATURE=0

# Run the agent
test-evaluator-agent
```

## How It Works

1. **Data Extraction Phase**: Generator creates extraction scripts, Schema and Data Evaluators validate output
2. **Address Matching Phase**: Generator matches addresses with candidates, CLI Validator checks final output
3. **Validation**: Multiple validation layers ensure data quality and schema compliance

## Development

This package is designed to be run as a standalone tool with all dependencies managed automatically.
